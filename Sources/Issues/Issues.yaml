openapi: 3.1.0
info:
  title: GitHub API Proxy - Issues Management
  description: Proxy to GitHub REST API endpoints for full CRUD operations on issues.
  version: 1.0.0
  contact:
    name: Support
    email: support@pm.fountain.coach
servers:
  - url: https://issues.pm.fountain.coach
    description: Proxy server for GitHub Issues REST API.

paths:
  /repos/{owner}/{repo}/issues:
    post:
      operationId: createIssue
      summary: Create an Issue
      description: Creates a new issue in the specified repository.
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                assignees:
                  type: array
                  items:
                    type: string
                labels:
                  type: array
                  items:
                    type: string
                milestone:
                  type: integer
      responses:
        '201':
          description: Issue created successfully.
        '401':
          description: Unauthorized.
        '422':
          description: Validation failed.

    get:
      operationId: listIssues
      summary: List Issues
      description: Retrieves a list of issues from the specified repository.
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of issues retrieved successfully.
        '401':
          description: Unauthorized.

  /repos/{owner}/{repo}/issues/{issue_number}:
    get:
      operationId: getIssue
      summary: Get an Issue
      description: Retrieves details of a specific issue.
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Issue retrieved successfully.
        '401':
          description: Unauthorized.
        '404':
          description: Issue not found.

    patch:
      operationId: updateIssue
      summary: Update an Issue
      description: Updates an existing issue.
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                state:
                  type: string
                  enum: [open, closed]
                labels:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Issue updated successfully.
        '401':
          description: Unauthorized.
        '404':
          description: Issue not found.

    delete:
      operationId: deleteIssue
      summary: Delete an Issue
      description: Deletes a specific issue.
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Issue deleted successfully.
        '401':
          description: Unauthorized.
        '404':
          description: Issue not found.

components:
  schemas: {}
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []
